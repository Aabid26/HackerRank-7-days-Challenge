class Solution {
public:
    double myPow(double x, int n) {
      if(x!=1 && x!=-1){ 
        if (n==0){
            return 1;
        }
         else if(n>0){
      double pow=1.00000;
        if(n>=INT_MAX){
              int diff=n-INT_MAX;
         n-=diff;
         while(n!=0){
             pow *=x;
            if(pow==0)
            n=0;
            else
            --n;
         }
         //pow*=0;
            }
    else {
        while(n!=0){
            pow *=x;
           --n;
        }
           
    }
         return pow;
        //return x*myPow(x,(n-1));
        } 
        else if(n<0){
        int p=0;
            if(n==INT_MIN)
           p=abs(n+1);
        else 
            p=abs(n);
            double val=1/x;
      return myPow(val,p);
  
        
    }
           
      }
     else if(x==1)
             return 1;
      else if(x==-1){
            if ((n%10)%2==0)
                 return 1 ;
             else 
        return -1;
      //     double p = (double) (n%10);
      //       return p;
       }
          
   return 0;
  }
    
};
